<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.dangdang.com/schema/ddframe/rdb
                        http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource" />
        <property name="mapperLocations" value="classpath*:com/zhjs/transfer/dao/xml/*.xml"></property>
    </bean>

    <!-- Mapper接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhjs.transfer.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <bean id="transfer_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" primary="true">
        <property name="url" value="${jdbc.url.ds_0}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"></property>
        <property name="poolPreparedStatements" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
    </bean>
    <bean id="transfer_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url.ds_1}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"></property>
        <property name="poolPreparedStatements" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
    </bean>

    <rdb:strategy id="databaseShardingStrategy" sharding-columns="PAY_ACCOUNT_ID" algorithm-class="com.zhjs.transfer.config.shardingjdbc.SingleKeyDBSharding"/>
    <rdb:strategy id="tableShardingStrategy" sharding-columns="PAY_ACCOUNT_ID" algorithm-class="com.zhjs.transfer.config.shardingjdbc.SingleKeyTableSharding"/>

    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="transfer_0,transfer_1">
            <rdb:table-rules>
                <rdb:table-rule logic-table="account" actual-tables="account_${0..1}" database-strategy="databaseShardingStrategy" table-strategy="tableShardingStrategy"/>
                <rdb:table-rule logic-table="transfer_task" actual-tables="transfer_task_${0..1}"  database-strategy="databaseShardingStrategy" table-strategy="tableShardingStrategy"/>
            </rdb:table-rules>
        </rdb:sharding-rule>
    </rdb:data-source>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>